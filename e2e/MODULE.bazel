"Bazel dependencies"

include("//bazel/include:e2e.MODULE.bazel")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = True,
    python_version = "3.9",
)
python.toolchain(
    configure_coverage_tool = True,
    python_version = "3.10",
)
python.toolchain(
    configure_coverage_tool = True,
    is_default = True,
    python_version = "3.11",
)
python.toolchain(
    python_version = "3.12",
)
python.toolchain(
    python_version = "3.13",
)

# TODO: Swap in our pip
pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pip",
    python_version = "3.9",
    requirements_lock = "//:requirements.txt",
)
pip.parse(
    hub_name = "pip",
    python_version = "3.10",
    requirements_lock = "//:requirements.txt",
)
pip.parse(
    hub_name = "pip",
    python_version = "3.11",
    requirements_lock = "//:requirements.txt",
)
pip.parse(
    hub_name = "pip",
    python_version = "3.12",
    requirements_lock = "//:requirements.txt",
)
pip.parse(
    hub_name = "pip",
    python_version = "3.13",
    requirements_lock = "//:requirements.txt",
)
use_repo(pip, "pip")

# For cases/cross-repo-610
local_repository = use_repo_rule("@bazel_tools//tools/build_defs/repo:local.bzl", "local_repository")

local_repository(
    name = "subrepo_a",
    path = "./cases/cross-repo-610/subrepo_a",
)

local_repository(
    name = "subrepo_b",
    path = "./cases/cross-repo-610/subrepo_b",
)

# For cases/repository-rule-deps-299
importer = use_extension("//cases/repository-rule-deps-299/rules:import.bzl", "importer")
use_repo(importer, "myrepo")

# For cases/uv-deps-650
uv = use_extension("@aspect_rules_py//uv:extension.bzl", "uv")
uv.declare_hub(hub_name = "pypi")
uv.declare_venv(
    hub_name = "pypi",
    venv_name = "default",
)
uv.lockfile(
    hub_name = "pypi",
    lockfile = "//cases/uv-deps-650:uv-default.lock",
    venv_name = "default",
)
uv.declare_venv(
    hub_name = "pypi",
    venv_name = "airflow",
)
uv.lockfile(
    hub_name = "pypi",
    lockfile = "//cases/uv-deps-650:uv-airflow.lock",
    venv_name = "airflow",
)
use_repo(uv, "pypi")

