# Cut a release whenever a new tag is pushed to the repo.
# You should use an annotated tag, like `git tag -a v1.2.3`
# and put the release notes into the commit message for the tag.
name: Release

on:
  push:
    tags:
      - "v*.*.*"
permissions:
  id-token: write
  attestations: write
  contents: write
jobs:
  build:
    runs-on:
      - ubuntu-22.04-32core

    steps:
      - uses: actions/checkout@v4

      - name: Build Rust Binaries
        env:
          DEST: artifacts
        run: |
          rm -rf ${{ env.DEST }}
          mkdir -p ${{ env.DEST }}
          FLAGS=(--bazelrc=.github/workflows/ci.bazelrc)

          # Query for deliver verbs (see bazel/release/release.bzl)
          TARGETS=$(bazel $FLAGS query 'attr(tags, "cd:verb:deliver", //...)')

          # Run each one of those targets to produce and "deliver" artifacts
          # into the target dir.
          #
          # These delivery targets are expected to lay down <asset> and <asset>.sha256
          for target in $TARGETS; do
            bazel $FLAGS run $target -- $(realpath ${{ env.DEST }})
          done

      - uses: actions/upload-artifact@v4
        with:
          name: artifacts-ubuntu
          path: artifacts/
          retention-days: 1

  release:
    needs: build
    uses: bazel-contrib/.github/.github/workflows/release_ruleset.yaml@v7.2.2
    with:
      prerelease: false
      release_files: |
        artifacts-*/*
        rules_py-*.tar.gz
      tag_name: ${{ github.ref_name }}

  publish:
    needs: release
    uses: ./.github/workflows/publish.yaml
    with:
      tag_name: ${{ github.ref_name }}
    secrets:
      BCR_PUBLISH_TOKEN: ${{ secrets.BCR_PUBLISH_TOKEN }}
