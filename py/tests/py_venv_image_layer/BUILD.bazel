load("@aspect_bazel_lib//lib:transitions.bzl", "platform_transition_filegroup")
load("@container_structure_test//:defs.bzl", "container_structure_test")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_load")
load("//py:defs.bzl", "py_image_layer")
load("//py/unstable:defs.bzl", "py_venv_binary")
load("asserts.bzl", "assert_tar_listing")

platform(
    name = "aarch64_linux",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:aarch64",
    ],
)

platform(
    name = "x86_64_linux",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)

py_venv_binary(
    name = "my_app_bin",
    srcs = ["__main__.py"],
    main = "__main__.py",
    tags = ["manual"],
    deps = [
        "//py/tests/internal-deps/adder",
        "//py/tests/py_image_layer/branding",
        "@pypi_colorama//:pkg",
    ],
)

py_image_layer(
    name = "my_app_layers",
    binary = ":my_app_bin",
)

platform_transition_filegroup(
    name = "platform_layers",
    srcs = [":my_app_layers"],
    target_platform = ":x86_64_linux",
)

assert_tar_listing(
    name = "my_app_layers_test",
    actual = [":platform_layers"],
    expected = ":my_app_layers_listing.yaml",
)

oci_image(
    name = "image",
    # This is defined by an oci.pull() call in /MODULE.bazel
    base = "@ubuntu",
    entrypoint = ["/{}/my_app_bin".format(package_name())],
    tars = [":my_app_layers"],
)

platform_transition_filegroup(
    name = "platform_image",
    srcs = [":image"],
    target_platform = select({
        "@platforms//cpu:arm64": ":aarch64_linux",
        "@platforms//cpu:x86_64": ":x86_64_linux",
    }),
)

# To build the image and load it into it into a local runtime:
# $ bazel run //py/tests/py_venv_image_layer:image_load
# $ docker run --rm gcr.io/oci_python_venv_hello_world:latest
oci_load(
    name = "image_load",
    image = ":platform_image",
    repo_tags = ["gcr.io/oci_python_venv_hello_world:latest"],
)

platform_transition_filegroup(
    name = "amd64_image",
    srcs = [":image"],
    target_platform = ":x86_64_linux",
)

container_structure_test(
    name = "py_image_test",
    configs = ["py_image_test.yaml"],
    image = ":amd64_image",
    platform = "linux/amd64",
)
